class Solution {
public:
    vector<int> searchRange(vector<int>& nums, int target) 
    {
        if(nums.size()==0) return{-1,-1};
        vector<int>dp;
        int left = 0;
        int right = nums.size();
        while(left < right)
        {
            int mid = left + (right - left)/2;
            if(nums[mid] == target)
                right = mid;
            else if(nums[mid] < target)
                left = mid+1;    
            else if(nums[mid] > target)
                right = mid;
        }
        //要考虑越界问题
        if(left == nums.size()) dp.push_back(-1);
        else 
            dp.push_back(nums[left] == target ? left:-1);
        left = 0;
        right = nums.size();
        while(left < right)
        {
            int mid = left + (right - left)/2;
            if(nums[mid] == target)
                left = mid+1;
            else if(nums[mid] < target)
                left = mid+1;
            else if(nums[mid] > target)
                right = mid;
        }
        if(left-1<0) dp.push_back(-1);
        else 
            dp.push_back(nums[left-1] == target ? left-1:-1);   //最后这里是left-1
    return dp;
    }
};
